"use strict";
exports.__esModule = true;
exports.tCollectionsListResponseDataSchema = exports.tCollectionFieldsSimplifiedSchema = exports.tRawMintArgSchema = exports.tCallableMintOptionSchema = exports.tMintOptionSchema = exports.tTokenFieldsSchema = exports.tCollectionsListQueryDataSchema = exports.tMintArgBignumValueSchema = exports.tMintOptionMintArgSchema = exports.tTokenUrlFieldsSchema = exports.tTokenMediaItemFieldsSchema = exports.tTokenFieldsFlatSchema = exports.tCollectionFieldsFlatSchema = exports.tRecordDefaultFieldsSchema = exports.tPaginatedEndpointQueryDataSchema = void 0;
// Generated by ts-to-zod
var zod_1 = require("zod");
exports.tPaginatedEndpointQueryDataSchema = zod_1.z.object({
    skip: zod_1.z.number(),
    take: zod_1.z.number()
});
exports.tRecordDefaultFieldsSchema = zod_1.z.object({
    id: zod_1.z.string(),
    createdAt: zod_1.z.string(),
    updatedAt: zod_1.z.string()
});
exports.tCollectionFieldsFlatSchema = zod_1.z.object({
    networkName: zod_1.z.string(),
    contractAddress: zod_1.z.string(),
    thumbnailUrl: zod_1.z.string(),
    name: zod_1.z.string(),
    description: zod_1.z.string().optional()
});
exports.tTokenFieldsFlatSchema = zod_1.z.object({
    name: zod_1.z.string(),
    description: zod_1.z.string().optional(),
    tokenId: zod_1.z.string()
});
exports.tTokenMediaItemFieldsSchema = zod_1.z.object({
    representation: zod_1.z.string(),
    type: zod_1.z.string(),
    mimeType: zod_1.z.string(),
    url: zod_1.z.string()
});
exports.tTokenUrlFieldsSchema = zod_1.z.object({
    type: zod_1.z.string(),
    url: zod_1.z.string()
});
exports.tMintOptionMintArgSchema = zod_1.z
    .union([zod_1.z.string(), zod_1.z.number()])
    .nullable();
exports.tMintArgBignumValueSchema = zod_1.z.object({
    type: zod_1.z.literal("BigNumber"),
    hex: zod_1.z.string()
});
exports.tCollectionsListQueryDataSchema = exports.tPaginatedEndpointQueryDataSchema.and(zod_1.z.object({
    maxTokensPerCollection: zod_1.z.number().optional()
}));
exports.tTokenFieldsSchema = exports.tTokenFieldsFlatSchema.and(zod_1.z.object({
    tokenMediaItems: zod_1.z.array(exports.tTokenMediaItemFieldsSchema),
    tokenUrls: zod_1.z.array(exports.tTokenUrlFieldsSchema)
}));
exports.tMintOptionSchema = zod_1.z.object({
    networkName: zod_1.z.string(),
    contractAddress: zod_1.z.string(),
    mintQuantity: zod_1.z.number(),
    mintPriceInWei: zod_1.z.string(),
    mintMethod: zod_1.z.string(),
    mintArgs: zod_1.z.array(exports.tMintOptionMintArgSchema)
});
exports.tCallableMintOptionSchema = exports.tMintOptionSchema.and(zod_1.z.object({
    executeMint: zod_1.z["function"]().args().returns(zod_1.z["void"]())
}));
exports.tRawMintArgSchema = zod_1.z
    .object({
    name: zod_1.z.string()
})
    .and(zod_1.z.union([
    zod_1.z.object({
        type: zod_1.z.literal("address"),
        value: zod_1.z.literal("string")
    }),
    zod_1.z.object({
        type: zod_1.z.literal("uint256"),
        value: exports.tMintArgBignumValueSchema
    }),
    zod_1.z.object({
        type: zod_1.z.literal("bytes32[]"),
        value: zod_1.z.array(zod_1.z.string())
    }),
]));
exports.tCollectionFieldsSimplifiedSchema = exports.tCollectionFieldsFlatSchema.and(zod_1.z.object({
    id: zod_1.z.string(),
    tokenMediaItems: zod_1.z.array(exports.tTokenMediaItemFieldsSchema),
    mintOptions: zod_1.z.array(exports.tMintOptionSchema)
}));
exports.tCollectionsListResponseDataSchema = zod_1.z.object({
    collections: zod_1.z.array(exports.tCollectionFieldsSimplifiedSchema)
});
