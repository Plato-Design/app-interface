"use strict";
exports.__esModule = true;
exports.tCurationFieldsSchema = exports.tCurationSelectionFieldsSchema = exports.tCollectionsListResponseDataSchema = exports.tCollectionFieldsSchema = exports.tTokenFieldsSchema = exports.tCollectionsListQueryDataSchema = exports.tTokenUrlFieldsSchema = exports.tTokenMediaItemFieldsSchema = exports.tTokenFieldsFlatSchema = exports.tClaimPhaseFieldsSchema = exports.tCollectionFieldsFlatSchema = exports.tRecordDefaultFieldsSchema = exports.tPaginatedEndpointQueryDataSchema = void 0;
// Generated by ts-to-zod
var zod_1 = require("zod");
exports.tPaginatedEndpointQueryDataSchema = zod_1.z.object({
    skip: zod_1.z.number(),
    take: zod_1.z.number()
});
exports.tRecordDefaultFieldsSchema = zod_1.z.object({
    id: zod_1.z.string(),
    createdAt: zod_1.z.string(),
    updatedAt: zod_1.z.string()
});
exports.tCollectionFieldsFlatSchema = zod_1.z.object({
    networkName: zod_1.z.string(),
    contractAddress: zod_1.z.string(),
    thumbnailUrl: zod_1.z.string(),
    name: zod_1.z.string(),
    description: zod_1.z.string().optional()
});
exports.tClaimPhaseFieldsSchema = zod_1.z.object({
    mintMethod: zod_1.z.string(),
    mintArgs: zod_1.z.string(),
    mintStartAt: zod_1.z.string(),
    mintEndAt: zod_1.z.string(),
    mintPriceInWei: zod_1.z.string(),
    mintSupply: zod_1.z.number()
});
exports.tTokenFieldsFlatSchema = zod_1.z.object({
    name: zod_1.z.string(),
    description: zod_1.z.string().optional(),
    tokenId: zod_1.z.string()
});
exports.tTokenMediaItemFieldsSchema = zod_1.z.object({
    representation: zod_1.z.string(),
    type: zod_1.z.string(),
    mimeType: zod_1.z.string(),
    url: zod_1.z.string()
});
exports.tTokenUrlFieldsSchema = zod_1.z.object({
    type: zod_1.z.string(),
    url: zod_1.z.string()
});
exports.tCollectionsListQueryDataSchema = exports.tPaginatedEndpointQueryDataSchema.and(zod_1.z.object({
    maxTokensPerCollection: zod_1.z.number().optional()
}));
exports.tTokenFieldsSchema = exports.tTokenFieldsFlatSchema.and(zod_1.z.object({
    tokenMediaItems: zod_1.z.array(exports.tTokenMediaItemFieldsSchema),
    tokenUrls: zod_1.z.array(exports.tTokenUrlFieldsSchema)
}));
exports.tCollectionFieldsSchema = exports.tCollectionFieldsFlatSchema.and(zod_1.z.object({
    tokens: zod_1.z.array(exports.tTokenFieldsSchema),
    claimPhases: zod_1.z.array(exports.tClaimPhaseFieldsSchema)
}));
exports.tCollectionsListResponseDataSchema = zod_1.z.object({
    collections: zod_1.z.array(exports.tCollectionFieldsSchema)
});
exports.tCurationSelectionFieldsSchema = zod_1.z.object({
    type: zod_1.z.string(),
    collection: exports.tCollectionFieldsSchema.optional(),
    content: zod_1.z.string().optional()
});
exports.tCurationFieldsSchema = zod_1.z.object({
    publishedAt: zod_1.z.string().optional(),
    curationSelections: zod_1.z.array(exports.tCurationSelectionFieldsSchema)
});
